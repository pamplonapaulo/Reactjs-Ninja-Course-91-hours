"React.js Ninja" by Fernando Daciuk

* Module 3 * Part 3




class #70 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Reactflix (New Project)
CRUD (create, read, update, and delete), Firebase...

Introduction

class #71 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Setup 
https://github.com/da2k/curso-reactjs-ninja/tree/master/examples/m03/samples/49-reactflix


Professor spend the class setting up a new folder for the project.

He kept 'milligram', but included also:
 styled-components@^2.4.0
 normalize.css@^7.0.0

 Since normalize.css is new for us too, this one must be included in webpack to get appropriate loader:

        cssLoader: {
            test: /\.css$/,
            include: [
              paths.src,
              join(paths.modules, 'normalize,css'),
              join(paths.modules, 'milligram')
            ],
            use: ['style-loader', 'css-loader']
          },

He removed old folders such as:
  'reducers/address'
  'reducers/todos'
  'reducers/visibility-filter'

He also fixed some alias at webpack/common.js, but our file were already good for those changes.

class #72 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Styled Components

  import styled from 'styled-components'
  const Header = styled.header


Template Literals (strings multilinhas) para criar estilos CSS para este component.

It works kinda like a function:

      styled.header = function (...params) { 
      }

But this way:

        injectGlobal`
          html, body, div[data-js="app"] {
            height: 100%;
          }
        `
        const headerHight = '60px'
        const footerHeight = '30px'

        const Container = styled.div`
          height: 100%;
        `

        const Header = styled.header`
          height: ${headerHight};
          background: #333;
        `

        const Main = styled.main`
          min-height: calc(100% - ${headerHight} - ${footerHeight});
        `

        const Footer = styled.footer`
          height: ${footerHeight};
          background: #333;
        `

        export default App

class #73 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Videos listing


Tips about Flex Box (CSS):

const Video = styled.section`
  flex: 1 1 300px;
`
    first parameter:  flex-grow
    second parameter: flex-shrink
    third parameter:  flex-basis

ViewPort Meta Tag

Edit: src/html/template.html

  <meta name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no' />

Free Icons:
https://iconmonstr.com/

Styled Components Nested:

      const PlayStyled = styled(Play)`
        & path {
          background: #000
        }
        fill: #999;
        width: 50px;
        height: 50px;
        background: #999;
      `

class #74 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
https://github.com/da2k/curso-reactjs-ninja/tree/master/examples/m03/samples/49-reactflix/04

Spliting the code, from app to src/components/videos-list/index.js

insted of this:

      const Video = styled.section`
        flex: 1 1 300px;
        margin: 0 5px 5px;
      `

This makes more sense:

      const Video = styled.section`
      `

      const Container = styled.div`
        display: flex;
        flex-wrap: wrap

        & ${Video} {
          flex: 1 1 300px;
          margin: 0 5px 5px;  
        }
      `
Video must be declared before called bellow.

When styling a component, we never gonna set style for it's external zone, such as margin, flex, etc.


class #75 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Single de Video
https://github.com/da2k/curso-reactjs-ninja/tree/master/examples/m03/samples/49-reactflix/05


src/components/video-single.js:

          'use strict'

          import React from 'react'
          import styled from 'styled-components'

          const VideoSingle = () => (
            <Container>
              <Iframe width='560' height='480' src='https://www.youtube-nocookie.com/embed/Dj2Lqg7FUak' frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen />
              <Title>TÃ­tulo do filme</Title>
            </Container>
          )

          const Container = styled.div`
            display: flex;
            flex-direction: column;
            justify-content: center;
          `

          const Iframe = styled.iframe`
            background: #000;
            border: 0;
            border-bottom: 1px solid #999;
            margin-bottom: 10px;
            width: 100%;
          `

          const Title = styled.h2`
            padding: 10px;
          `

          export default VideoSingle


class #76 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Firebase Database
https://firebase.google.com/


My Firebase project: Meditation-TV (Id: meditation-tv)


https://console.firebase.google.com/project/meditation-tv/database/meditation-tv/data


class #77 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Get data from Firebase

https://github.com/da2k/curso-reactjs-ninja/tree/master/examples/m03/samples/49-reactflix/06


Include 'firebase' as global variable by editing out package.json:

        "standard": {
            "globals": [
              "it",
              "expect",
              "firebase"
            ]
          },


From our Firebase's project on the website's console (https://console.firebase.google.com/project/meditation-tv/settings), copy the code given by Firebase:

          <!-- The core Firebase JS SDK is always required and must be listed first -->
          <script src="https://www.gstatic.com/firebasejs/7.15.5/firebase-app.js"></script>

          <!-- TODO: Add SDKs for Firebase products that you want to use
              https://firebase.google.com/docs/web/setup#available-libraries -->
          <script src="https://www.gstatic.com/firebasejs/7.15.5/firebase-analytics.js"></script>

          <script>
            // Your web app's Firebase configuration
            var firebaseConfig = {
              apiKey: "XXXXXXXXXXXXXXXX",
              authDomain: "meditation-tv.firebaseapp.com",
              databaseURL: "https://meditation-tv.firebaseio.com",
              projectId: "meditation-tv",
              storageBucket: "meditation-tv.appspot.com",
              messagingSenderId: "XXXXXXXXXXXXXXXX",
              appId: "XXXXXXXXXXXXXXXX",
              measurementId: "XXXXXXXXXXXXXXXX"
            };
            // Initialize Firebase
            firebase.initializeApp(firebaseConfig);
            firebase.analytics();
          </script>

Go to src/html/template.html:

        Paste it before the closing body tag. Then to avoid not necessary data in global scope, remove 'var firebaseConfig' and take it's object directly as parameter of 'firebase.initializeApp()'.


















class #78 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *





















class #79 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *























class #80 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *





















class #81 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *





















class #82 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *





















class #83 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *





















class #84 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *





















class #85 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *





















class #86 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *





















class #87 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *





















class #88 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *





















class #89 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *






















class #90 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
class #91 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
class #92 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
class #93 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
class #94 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
